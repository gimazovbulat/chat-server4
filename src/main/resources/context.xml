<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="driverManagerDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="username" value="postgres"/>
        <property name="password" value="olisef67"/>
        <property name="url" value="jdbc:postgresql://localhost:5432/postgres"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg name="dataSource" ref="driverManagerDataSource"/>
    </bean>
    <bean id="hikariDataSource" class="com.zaxxer.hikari.HikariDataSource">
        <constructor-arg name="configuration" ref="hikariConfig"/>
    </bean>
    <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
        <property name="password" value="olisef67"/>
        <property name="username" value="postgres"/>
        <property name="jdbcUrl" value="jdbc:postgresql://localhost:5432/postgres"/>
    </bean>
    <bean id="productsRowMapper" class="myApp.dao.rowMappers.ProductsRowMapper"/>

    <bean id="messagesRepository" class="myApp.dao.repositoriesImpl.MessagesRepositoryImpl">
        <constructor-arg name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>

    <bean id="productsRepository" class="myApp.dao.repositoriesImpl.ProductsRepositoryImpl">
        <constructor-arg name="jdbcTemplate" ref="jdbcTemplate"/>
        <constructor-arg name="productsRowMapper" ref="productsRowMapper"/>
    </bean>

    <bean id="usersRepository" class="myApp.dao.repositoriesImpl.UsersRepositoryImpl">
        <constructor-arg name="jdbcTemplate" ref="jdbcTemplate"/>
        <constructor-arg name="encoder" ref="passwordEncoder"/>
        <constructor-arg name="productsRowMapper" ref="productsRowMapper"/>
    </bean>

    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <bean id="serverApplication" class="myApp.apps.ServerApplication">
        <constructor-arg name="argsServerClass" ref="serverArgs"/>
        <constructor-arg name="chatMultiServer" ref="chatMultiServer"/>
    </bean>

    <bean id="serverArgs" class="myApp.config.ServerArgs"/>
    <bean id="chatMultiServer" class="myApp.servers.ChatMultiServer">
        <constructor-arg name="requestDispatcher" ref="requestDispatcher"/>
    </bean>
    <bean id="requestDispatcher" class="myApp.services.impl.RequestDispatcherImpl">
        <constructor-arg name="commandsService" ref="commandsService"/>
        <constructor-arg name="helpService" ref="helpService"/>
        <constructor-arg name="messagesService" ref="messagesService"/>
        <constructor-arg name="usersService" ref="usersService"/>
    </bean>
    <bean id="commandsService" class="myApp.services.impl.CommandsServiceImpl">
        <constructor-arg name="messagesRepository" ref="messagesRepository"/>
        <constructor-arg name="productsRepository" ref="productsRepository"/>
        <constructor-arg name="usersRepository" ref="usersRepository"/>
    </bean>
    <bean id="helpService" class="myApp.services.impl.HelpServiceImpl"/>
    <bean id="messagesService" class="myApp.services.impl.MessagesServiceImpl">
        <constructor-arg name="messagesRepository" ref="messagesRepository"/>
    </bean>
    <bean id="usersService" class="myApp.services.impl.UsersServiceImpl">
        <constructor-arg name="usersRepository" ref="usersRepository"/>
    </bean>
</beans>